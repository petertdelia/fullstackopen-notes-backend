{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","className","content","onClick","important","Notification","message","baseUrl","request","axios","get","console","log","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAYeA,EAVF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACnB,OACE,qBAAIC,UAAU,OAAd,UACGF,EAAKG,QACN,yBAAQC,QAASH,EAAjB,mBAA0CD,EAAKK,UAAY,gBAAkB,mBCQpEC,EAZM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAAgB,OAAZA,EACK,KAIP,qBAAKL,UAAU,QAAf,SACGK,K,gBCRDC,EAAU,aAqBD,EAnBA,WACb,IAAMC,EAAUC,IAAMC,IAAIH,GAE1B,OADAI,QAAQC,IAAI,gBACLJ,EAAQK,MAAK,SAAAC,GAElB,OADAH,QAAQC,IAAI,qBACLE,EAASC,SAcL,EAVA,SAAAC,GAEb,OADgBP,IAAMQ,KAAKV,EAASS,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBP,IAAMU,IAAN,UAAaZ,EAAb,YAAwBW,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCoE5BK,EAlFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAC5B,iBAHc,mBAETG,EAFS,KAEAC,EAFA,OAKcJ,oBAAS,GALvB,mBAKTK,EALS,KAKAC,EALA,OAMwBN,mBAAS,MANjC,mBAMTO,EANS,KAMKC,EANL,KAQhBC,qBAAU,WACRnB,QAAQC,IAAI,UACZmB,IAEGlB,MAAK,SAAAmB,GACJT,EAASS,QAEZ,IAEH,IAoBMC,EACJP,EACEJ,EACAA,EAAMY,QAAO,SAAAnC,GAAI,OAAIA,EAAKK,aAsB9B,OACE,gCACE,uCAGA,cAAC,EAAD,CAAcE,QAASsB,IACvB,yBAAQzB,QAzBY,WACZwB,GAAVD,IAwBE,kBAAwCA,EAAU,YAAc,SAChE,6BACGO,EAAYE,KAAI,SAAApC,GAAI,OACnB,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBAxB/B,SAAAkB,GACzB,IAAMnB,EAAOuB,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAEnB,KAAOA,KAChCoB,EAAW,2BAAOvC,GAAP,IAAaK,WAAYL,EAAKK,YAE/C2B,EAAmBb,EAAIoB,GACtBzB,MAAK,SAAA0B,GACJhB,EAASD,EAAMa,KAAI,SAAAE,GAAC,OAAIA,EAAEnB,KAAOA,EAAKmB,EAAIE,SAE3CC,OAAM,SAAAC,GACLZ,EAAgB,aAAD,OAAc9B,EAAKG,QAAnB,0CACfwC,YAAW,kBAAMb,EAAgB,QAAO,KACxCN,EAASD,EAAMY,QAAO,SAAAG,GAAC,OAAIA,EAAEnB,KAAOA,SAawByB,CAAmB5C,EAAKmB,MAArEnB,EAAKmB,SAGpB,uBAAM0B,SArDM,SAACC,GACfA,EAAMC,iBACN,IAAIC,EAAa,CACf7C,QAASsB,EACTwB,MAAM,IAAIC,MAAOC,WACjB9C,UAAW+C,KAAKC,SAAW,IAE7BrB,EACUgB,GACPlC,MAAK,SAAAW,GACJD,EAASD,EAAM+B,OAAO7B,IACtBC,EAAW,QA0Cb,UACI,uBAAO6B,MAAO9B,EAAS+B,SA1DN,SAACV,GACxBpB,EAAWoB,EAAMW,OAAOF,UA0DlB,wBAAQG,KAAK,SAAb,yB,MCvDVC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.429b9a0a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({note, toggleImportance}) => {\n  return (\n    <li className=\"note\"> \n      {note.content} \n      <button onClick={toggleImportance}> Mark {note.important ? \"not important\" : \"important\"}</button>\n    </li>\n    \n  )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  );\n}\n\nexport default Notification;","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  console.log('request sent');\n  return request.then(response => {\n    console.log('inside the \"then\"');\n    return response.data;\n  });\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n}","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport noteService from './services/notes';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\n    'A new note...'\n  );\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    console.log('effect');\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes);\n      });\n  }, []);\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  }\n\n  const addNote = (event) => {\n    event.preventDefault();\n    let noteObject = {\n      content: newNote,\n      date: new Date().toString(),\n      important: Math.random() < 0.5,\n    };\n    noteService\n      .create(noteObject)\n      .then(newNote => {\n        setNotes(notes.concat(newNote));\n        setNewNote(\"\");\n      });\n    \n  }\n\n  const notesToShow = (\n    showAll \n    ? notes\n    : notes.filter(note => note.important)\n  )\n\n  const handleAllButton = () => {\n    showAll ? setShowAll(false) : setShowAll(true);\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = {...note, important: !note.important};\n\n    noteService.update(id, changedNote)\n    .then(returnedNote => {\n      setNotes(notes.map(n => n.id !== id ? n : returnedNote));\n    })\n    .catch(error => {\n      setErrorMessage(`The note \"${note.content}\" was already deleted from the server`);\n      setTimeout(() => setErrorMessage(null), 5000);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n\n  return (\n    <div>\n      <h1>\n        notes\n      </h1>\n      <Notification message={errorMessage} />\n      <button onClick={handleAllButton}>show {showAll ? \"important\" : \"all\"}</button>\n      <ul>\n        {notesToShow.map(note => \n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n          <input value={newNote} onChange={handleNoteChange}/>\n          <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\n// const notes = [\n//   {\n//     id: 1,\n//     content: 'HTML is easy',\n//     date: '2019-05-30T17:30:31.098Z',\n//     important: true\n//   },\n//   {\n//     id: 2,\n//     content: 'Browser can execute only JavaScript',\n//     date: '2019-05-30T18:39:34.091Z',\n//     important: false\n//   },\n//   {\n//     id: 3,\n//     content: 'GET and POST are the most important methods of HTTP protocol',\n//     date: '2019-05-30T19:20:14.298Z',\n//     important: true\n//   }\n// ]\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}